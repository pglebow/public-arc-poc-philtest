{
	"metadata": {
		"version": 2
	},
	"application": {
		"name": "arc-poc",
		"language": "JAVA_GRADLE",
		"artifact_store": {
			"repositories": null
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"publish_attributes": {
					"publish": true,
					"docker_attributes": {
						"repository": "((application.name))",
						"tags": [
							"((application.version))"
						],
						"context": "",
						"docker_file_path": ""
					}
				},
				"exit_actions": {},
				"properties": [
					{
						"name": "gradle.user.home",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle"
					},
					{
						"name": "ivy.defaultCacheDir",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy"
					},
					{
						"name": "maven.repo.local",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2"
					}
				],
				"deployment_strategy": {},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				},
				"tasks": [
					{
						"name": "arc-poc",
						"steps": [
							{
								"name": "build",
								"definition": "build",
								"command": "gradle build",
								"properties": null
							},
							{
								"name": "prepareForDocker",
								"definition": "prepareForDocker",
								"command": "mkdir -p build/dependency\ncd build/dependency\njar -xvf ../libs/*.jar",
								"properties": null
							}
						],
						"docker_registry_alias_id": "81e5f42e-c451-41ad-62c0-b2f861b3a72f",
						"docker_options": {
							"repository": "library/gradle:jdk16"
						}
					}
				]
			},
			{
				"name": "Isolation",
				"segment_type": "isolation",
				"run_after": [
					"Build"
				],
				"exit_actions": {},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-30000",
					"update_watch_time": "5000-30000",
					"serial": false
				},
				"application_init": {},
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 1,
						"cloud_provider_type": "aws",
						"vm_type": "default",
						"os_type": "default",
						"networks": [
							"isolation"
						],
						"availability_zones": [
							"default"
						],
						"deployment_strategy": {},
						"dependencies": [
							{
								"name": "consul",
								"release": "consul",
								"provides": [
									{
										"name": "consul_servers.as",
										"value": "consul_1"
									}
								],
								"consumes": [
									{
										"name": "consul_servers.from",
										"value": "consul_1"
									}
								],
								"properties": [
									{
										"name": "consul.servicename",
										"value": "((consul.servicename))"
									},
									{
										"name": "consul.environment",
										"value": "((consul.environment))"
									},
									{
										"name": "consul.datacenter",
										"value": "((consul.datacenter))"
									},
									{
										"name": "consul.server",
										"value": "false"
									},
									{
										"name": "consul.joinservers",
										"value": "((consul.joinservers))"
									},
									{
										"name": "calculi.intermediate.cert",
										"value": "grsecret:tls.cert"
									},
									{
										"name": "calculi.intermediate.key",
										"value": "grsecret:tls.key"
									}
								]
							}
						]
					}
				],
				"k8s_instance_groups": [
					{
						"tool_config_alias_id": "c29b5819-2d06-4c04-552f-cac50c6689d9",
						"name": "((application.name))",
						"cluster_name": "",
						"namespace": "((application.name))-((application.shortsha))",
						"replicas": 1,
						"containers": [
							{
								"name": "((application.name))",
								"image": "((gr.dockerregistry.repo_url))/((application.name)):((application.version))",
								"ports": [
									{
										"hostPort": 8080,
										"containerPort": 8080,
										"protocol": "TCP"
									}
								],
								"resources": {},
								"imagePullPolicy": "Always"
							}
						],
						"autoscaling": {
							"metadata": {
								"creationTimestamp": null
							},
							"spec": {
								"scaleTargetRef": {
									"kind": "",
									"name": ""
								},
								"minReplicas": 1,
								"maxReplicas": 1,
								"metrics": [
									{
										"type": "Resource",
										"resource": {
											"name": "cpu",
											"target": {
												"type": "AverageValue",
												"averageValue": "70"
											}
										}
									},
									{
										"type": "Resource",
										"resource": {
											"name": "memory",
											"target": {
												"type": "AverageValue",
												"averageValue": "70"
											}
										}
									}
								]
							},
							"status": {
								"currentReplicas": 0,
								"desiredReplicas": 0,
								"currentMetrics": null,
								"conditions": null
							}
						},
						"ingress_enabled": true,
						"ingress": {
							"metadata": {
								"creationTimestamp": null
							},
							"spec": {
								"rules": [
									{
										"host": "((application.name))-iso.calculi.io",
										"http": {
											"paths": [
												{
													"path": "/",
													"backend": {
														"servicePort": 8080
													}
												}
											]
										}
									}
								]
							},
							"status": {
								"loadBalancer": {}
							}
						},
						"dns_hosted_zone": "calculi.io",
						"service_name": "((application.name))-((application.shortsha))",
						"alb_ingress_controller_annotations": {
							"alb.ingress.kubernetes.io/healthcheck-path": "/actuator/health",
							"alb.ingress.kubernetes.io/healthcheck-port": "traffic-port",
							"alb.ingress.kubernetes.io/scheme": "internet-facing"
						}
					}
				],
				"deployment_target": 2
			}
		],
		"exit_actions": {},
		"default_properties": [
			{
				"name": "AWS_ACCESS_KEY_ID",
				"value": "AKIA347C3P4E4UKBARJI",
				"type": "string"
			},
			{
				"name": "AWS_SECRET_ACCESS_KEY",
				"value": "secret:121ad8f4-add6-4ec0-5eab-230d7b37503b/7a4a0043-8a17-43db-40a4-28feb5f9fe6a/555983fc-fe0b-496a-57bd-397e028bb64e/534029d9-bb98-4ff8-7655-1b5b8c9cbcd9/AWS_SECRET_ACCESS_KEY",
				"type": "string",
				"secret": true,
				"secret_path": "121ad8f4-add6-4ec0-5eab-230d7b37503b/7a4a0043-8a17-43db-40a4-28feb5f9fe6a/555983fc-fe0b-496a-57bd-397e028bb64e/534029d9-bb98-4ff8-7655-1b5b8c9cbcd9/AWS_SECRET_ACCESS_KEY"
			}
		],
		"deployment_files": [],
		"application_init": {
			"command": "bin/start-service.sh"
		},
		"releases": [
			{
				"name": "consul",
				"version": "latest"
			}
		]
	},
	"organization": {
		"orgname": "GR-Product"
	}
}